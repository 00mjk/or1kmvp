 ##############################################################################
 #                                                                            #
 # Copyright 2018 Jan Henrik Weinstock                                        #
 #                                                                            #
 # Licensed under the Apache License, Version 2.0 (the "License");            #
 # you may not use this file except in compliance with the License.           #
 # You may obtain a copy of the License at                                    #
 #                                                                            #
 #     http://www.apache.org/licenses/LICENSE-2.0                             #
 #                                                                            #
 # Unless required by applicable law or agreed to in writing, software        #
 # distributed under the License is distributed on an "AS IS" BASIS,          #
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
 # See the License for the specific language governing permissions and        #
 # limitations under the License.                                             #
 #                                                                            #
 ##############################################################################

 ### Simulation TCP port summary ##############################################

# Format: <device> -> <port> (<protocol>)
# system.uart0 -> 57010 (raw binary)
# system.uart1 -> 57011 (raw binary)
# system.ethoc -> 57012 (raw binary)
# system.cpu0  -> 57100 (GDB RSP)
# system.cpu1  -> 57101 (GDB RSP)
# system.cpu2  -> 57102 (GDB RSP)
# system.cpu3  -> 57103 (GDB RSP)


 ### General configuration ####################################################

# Specify the number of processors to instantiate in the simulation. Maximum
# allowed is 32. Override this on command line using -c system.nrcpus=X.
system.nrcpu = 4

# Specify simulation duration. Simulation will stop automatically once this
# time-stamp is reached. Use integer values with suffixes s, ms, us or ns. If
# you want to simulate infinitely, leave this commented out.
#  system.duration = 2s

# TLM global quantum, a higher value improves performance but reduces timing
# accuracy. Use integer values with suffixes s, ms, us or ns.
system.quantum  = 5us


 ### Memory and IO peripherals configuration ##################################

# Bus memory map
# system.mem   = 0x00000000 0x07ffffff
# system.uart0 = 0x90000000 0x90001fff
# system.uart1 = 0x91000000 0x91001fff
# system.ethoc = 0x92000000 0x92001fff
# system.ompic = 0x98000000 0x98001fff

# Memory configuration
system.mem.size = 0x08000000 # 128MB
system.mem.images = $dir/../sw/vmlinux-4.18.0   @ 0x00000000; \
                    $dir/../sw/or1kmvp-smp4.dtb @ 0x04000000;

# UART configuration
system.uart0.clock = 3686400 # 3.6864MHz
system.uart0.backends = tcp term # console xterm stdout file null
system.uart0.backend0.port = 57010

system.uart1.clock = 3686400 # 3.6864MHz
system.uart1.backends = tcp stdout # console xterm term file null
system.uart1.backend0.port = 57011

# ETHOC configuration
system.ethoc.mac = 3a:44:1d:55:11:5a
system.ethoc.backends = tcp tap # console xterm stdout file null
system.ethoc.backend0.port = 57012
system.ethoc.backend1.devno = 0


 ### Per-CPU configuration ####################################################

system.cpu0.symbols  = $dir/../sw/vmlinux-4.18.0.elf
system.cpu0.gdb_term = $dir/../bin/or1kmvp-gdbterm
system.cpu0.gdb_port = 57100 # gdb server port
system.cpu0.gdb_wait = 0     # wait until connected
system.cpu0.gdb_sync = 1     # pause SystemC when core is stopped
system.cpu0.gdb_echo = 0     # echo gdb rsp packets

# system.cpu0.clock = 100000000
# system.cpu0.enable_decode_cache = 0
# system.cpu0.enable_sleep_mode = 0
# system.cpu0.enable_insn_dmi = 0
# system.cpu0.enable_data_dmi = 0
# system.cpu0.irq_ompic = 1
# system.cpu0.irq_uart0 = 2
# system.cpu0.irq_uart1 = 3
# system.cpu0.irq_ethoc = 4

system.cpu1.symbols  = $dir/../sw/vmlinux-4.18.0.elf
system.cpu1.gdb_term = $dir/../bin/or1kmvp-gdbterm
system.cpu1.gdb_port = 57101 # gdb server port
system.cpu1.gdb_wait = 0     # wait until connected
system.cpu1.gdb_sync = 1     # pause SystemC when core is stopped
system.cpu1.gdb_echo = 0     # echo gdb rsp packets

# system.cpu1.clock = 100000000
# system.cpu1.enable_decode_cache = 0
# system.cpu1.enable_sleep_mode = 0
# system.cpu1.enable_insn_dmi = 0
# system.cpu1.enable_data_dmi = 0
# system.cpu1.irq_ompic = 1
# system.cpu1.irq_uart0 = 2
# system.cpu1.irq_uart1 = 3
# system.cpu1.irq_ethoc = 4

system.cpu2.symbols  = $dir/../sw/vmlinux-4.18.0.elf
system.cpu2.gdb_term = $dir/../bin/or1kmvp-gdbterm
system.cpu2.gdb_port = 57102 # gdb server port
system.cpu2.gdb_wait = 0     # wait until connected
system.cpu2.gdb_sync = 1     # pause SystemC when core is stopped
system.cpu2.gdb_echo = 0     # echo gdb rsp packets

# system.cpu2.clock = 100000000
# system.cpu2.enable_decode_cache = 0
# system.cpu2.enable_sleep_mode = 0
# system.cpu2.enable_insn_dmi = 0
# system.cpu2.enable_data_dmi = 0
# system.cpu2.irq_ompic = 1
# system.cpu2.irq_uart0 = 2
# system.cpu2.irq_uart1 = 3
# system.cpu2.irq_ethoc = 4

system.cpu3.symbols  = $dir/../sw/vmlinux-4.18.0.elf
system.cpu3.gdb_term = $dir/../bin/or1kmvp-gdbterm
system.cpu3.gdb_port = 57103 # gdb server port
system.cpu3.gdb_wait = 0     # wait until connected
system.cpu3.gdb_sync = 1     # pause SystemC when core is stopped
system.cpu3.gdb_echo = 0     # echo gdb rsp packets

# system.cpu3.clock = 100000000
# system.cpu3.enable_decode_cache = 0
# system.cpu3.enable_sleep_mode = 0
# system.cpu3.enable_insn_dmi = 0
# system.cpu3.enable_data_dmi = 0
# system.cpu3.irq_ompic = 1
# system.cpu3.irq_uart0 = 2
# system.cpu3.irq_uart1 = 3
# system.cpu3.irq_ethoc = 4
